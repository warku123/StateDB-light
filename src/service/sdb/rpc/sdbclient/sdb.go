// Code generated by goctl. DO NOT EDIT.
// Source: sdb.proto

package sdbclient

import (
	"context"

	"statedbl/service/sdb/rpc/types/sdb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddBalanceRequest     = sdb.AddBalanceRequest
	AddBalanceResponse    = sdb.AddBalanceResponse
	CreateAccountRequest  = sdb.CreateAccountRequest
	CreateAccountResponse = sdb.CreateAccountResponse
	GetBalanceRequest     = sdb.GetBalanceRequest
	GetBalanceResponse    = sdb.GetBalanceResponse
	GetNonceRequest       = sdb.GetNonceRequest
	GetNonceResponse      = sdb.GetNonceResponse
	SetNonceRequest       = sdb.SetNonceRequest
	SetNonceResponse      = sdb.SetNonceResponse
	SubBalanceRequest     = sdb.SubBalanceRequest
	SubBalanceResponse    = sdb.SubBalanceResponse
	SuicideRequest        = sdb.SuicideRequest
	SuicideResponse       = sdb.SuicideResponse

	Sdb interface {
		CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error)
		SubBalance(ctx context.Context, in *SubBalanceRequest, opts ...grpc.CallOption) (*SubBalanceResponse, error)
		AddBalance(ctx context.Context, in *AddBalanceRequest, opts ...grpc.CallOption) (*AddBalanceResponse, error)
		GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error)
		Suicide(ctx context.Context, in *SuicideRequest, opts ...grpc.CallOption) (*SuicideResponse, error)
		GetNonce(ctx context.Context, in *GetNonceRequest, opts ...grpc.CallOption) (*GetNonceResponse, error)
		SetNonce(ctx context.Context, in *SetNonceRequest, opts ...grpc.CallOption) (*SetNonceResponse, error)
	}

	defaultSdb struct {
		cli zrpc.Client
	}
)

func NewSdb(cli zrpc.Client) Sdb {
	return &defaultSdb{
		cli: cli,
	}
}

func (m *defaultSdb) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*CreateAccountResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.CreateAccount(ctx, in, opts...)
}

func (m *defaultSdb) SubBalance(ctx context.Context, in *SubBalanceRequest, opts ...grpc.CallOption) (*SubBalanceResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.SubBalance(ctx, in, opts...)
}

func (m *defaultSdb) AddBalance(ctx context.Context, in *AddBalanceRequest, opts ...grpc.CallOption) (*AddBalanceResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.AddBalance(ctx, in, opts...)
}

func (m *defaultSdb) GetBalance(ctx context.Context, in *GetBalanceRequest, opts ...grpc.CallOption) (*GetBalanceResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.GetBalance(ctx, in, opts...)
}

func (m *defaultSdb) Suicide(ctx context.Context, in *SuicideRequest, opts ...grpc.CallOption) (*SuicideResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.Suicide(ctx, in, opts...)
}

func (m *defaultSdb) GetNonce(ctx context.Context, in *GetNonceRequest, opts ...grpc.CallOption) (*GetNonceResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.GetNonce(ctx, in, opts...)
}

func (m *defaultSdb) SetNonce(ctx context.Context, in *SetNonceRequest, opts ...grpc.CallOption) (*SetNonceResponse, error) {
	client := sdb.NewSdbClient(m.cli.Conn())
	return client.SetNonce(ctx, in, opts...)
}
