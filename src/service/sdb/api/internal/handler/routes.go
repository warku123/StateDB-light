// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"statedbl/service/sdb/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/createaccount",
				Handler: CreateAccountHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/subbalance",
				Handler: SubBalanceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addbalance",
				Handler: AddBalanceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/getbalance",
				Handler: GetBalanceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/suicide",
				Handler: SuicideHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/hassuicided",
				Handler: HasSuicidedHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/getnonce",
				Handler: GetNonceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/setnonce",
				Handler: SetNonceHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/getcodehash",
				Handler: GetCodeHashHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/getcode",
				Handler: GetCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/setcode",
				Handler: SetCodeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/getcodesize",
				Handler: GetCodeSizeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addrefund",
				Handler: AddRefundHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/subrefund",
				Handler: SubRefundHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/getrefund",
				Handler: GetRefundHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/gettransientstate",
				Handler: GetTransientStateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/settransientstate",
				Handler: SetTransientStateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/exist",
				Handler: ExistHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/empty",
				Handler: EmptyHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addressinaccesslist",
				Handler: AddressInAccessListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/slotinaccesslist",
				Handler: SlotInAccessListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addaddresstoaccesslist",
				Handler: AddAddressToAccessListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addslottoaccesslist",
				Handler: AddSlotToAccessListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/reverttosnapshot",
				Handler: RevertToSnapshotHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/snapshot",
				Handler: SnapshotHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addpreimage",
				Handler: AddPreimageHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/addlog",
				Handler: AddLogHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/sdb/prepare",
				Handler: PrepareHandler(serverCtx),
			},
		},
	)
}
